name: Databricks Enterprise Deployment

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      artifact_types:
        required: true
        type: string
        description: "notebooks|wheel|libraries|all"
      project_path:
        required: true
        type: string
      databricks_path:
        required: true
        type: string
      test_type:
        required: false
        type: string
        default: 'unit'
        description: "unit|integration|both"

    secrets:
      DATABRICKS_HOST:
        required: true
      DATABRICKS_TOKEN:
        required: true
      DATABRICKS_CLUSTER_ID:
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-integration
      - name: Unit Tests
        if: inputs.test_type == 'unit' || inputs.test_type == 'both'
        run: pytest tests/unit --cov=${{ inputs.project_path }}
      - name: Integration Tests
        if: inputs.test_type == 'integration' || inputs.test_type == 'both'
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: pytest tests/integration
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov/

  build:
    needs: test
    if: inputs.artifact_types == 'wheel' || inputs.artifact_types == 'all'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Build Wheel
        run: |
          pip install build
          python -m build
          
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/*.whl

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Databricks CLI
        run: |
          pip install databricks-cli urllib3==1.26.15
          
      - name: Configure Databricks
        run: |
          echo "machine ${{ secrets.DATABRICKS_HOST }} login token password ${{ secrets.DATABRICKS_TOKEN }}" > ~/.netrc
          chmod 600 ~/.netrc
          
      - name: Deploy to Databricks
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          echo "Deploying artifacts to ${{ inputs.databricks_path }}"
          # Add overwrite flag
          databricks workspace import_dir ${{ inputs.project_path }} ${{ inputs.databricks_path }} --overwrite
